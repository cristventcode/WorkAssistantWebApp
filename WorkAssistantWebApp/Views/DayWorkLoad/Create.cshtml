@model WorkLibrary.StockItem

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<div class="row">
    <div class="col-xs-12 col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4> Quick Add </h4>
            </div>
            <div class="panel-body">
                <div class="form-group">
                    <label for="sel1">Select list:</label>
                    <select class="form-control form-control-sm" id="pulled-selection-holder"></select>
                </div>
                <button id="quick-add-btn" type="button" class="btn btn-default btn-sm"> Add </button>

                <hr />
                <div id="pending-holder" class="hidden">
                    <h5> Pending Stock </h5>
                    <div id="pending-list">
                        <div class="input-group">
                        </div>
                    </div>

                    <br />
                    <a id="reset-pending-list" class="btn btn-xs btn-default"> Reset List </a>
                </div>

            </div>
        </div>

    </div>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>StockItem</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group hidden">
                @Html.LabelFor(model => model.WorkDayId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.WorkDayId, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.workdayid } })
                    @Html.ValidationMessageFor(model => model.WorkDayId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.End, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.End, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/Scripts/getContent.js");

    }
